image: docker:latest

variables:
  DOCKER_TLS_CERIDIR: ""
  DOCKER_HOST: tcp://docker:2375

services:
  - docker:dind

stages:
  - build-n-pub
  - deploy

build-and-publish-images:
  stage: build-n-pub
  tags: 
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        TAG: "prod"
    - if: $CI_COMMIT_BRANCH == "dev"
      variables:
        TAG: "dev"
  before-script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
  script:
    - docker-compose -f docker-compose-build.yaml
    - docker images
    - docker push $DOCKER_LOWER_USERNAME/result:$TAG-$COMMIT_TIME
    - docker push $DOCKER_LOWER_USERNAME/result:latest-$TAG
    - docker push $DOCKER_LOWER_USERNAME/vote:$TAG-$COMMIT_TIME
    - docker push $DOCKER_LOWER_USERNAME/vote:latest-$TAG
    - docker push $DOCKER_LOWER_USERNAME/worker:$TAG-$COMMIT_TIME
    - docker push $DOCKER_LOWER_USERNAME/worker:latest-$TAG
    - docker push $DOCKER_LOWER_USERNAME/seed-data:$TAG-$COMMIT_TIME
    - docker push $DOCKER_LOWER_USERNAME/seed-data:latest-$TAG

deploy:
  stage: deploy
  tags: 
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        IP_SERVER: $IP_SERVER_PROD
        TAG: "prod"
    - if: $CI_COMMIT_BRANCH == "dev"
      variables:
        IP_SERVER: $IP_SERVER_DEV
        TAG: "dev"
  before-script:
    - chmod 400 $SSH_PRIVATE_KEY
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY docker-compose-$TAG.yml ubuntu@$IP_SERVER:/home/ubuntu
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$IP_SERVER "
      ls &&
      docker-compose down &&
      docker-compose up -d
      docker images &&
      docker ps"